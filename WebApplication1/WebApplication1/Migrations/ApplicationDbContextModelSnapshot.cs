// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Map", b =>
                {
                    b.Property<int>("MapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MapId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MapId");

                    b.ToTable("Maps");

                    b.HasData(
                        new
                        {
                            MapId = 1,
                            Name = "Dust_2",
                            Type = "Tournament"
                        },
                        new
                        {
                            MapId = 2,
                            Name = "Mirage",
                            Type = "Normal"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Match", b =>
                {
                    b.Property<int>("MatchId")
                        .HasColumnType("int");

                    b.Property<int>("TournamentId")
                        .HasColumnType("int");

                    b.Property<int>("MapId")
                        .HasColumnType("int");

                    b.Property<decimal?>("BestRating")
                        .HasColumnType("decimal(4,2)");

                    b.Property<DateTime>("MatchDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Team1Score")
                        .HasColumnType("int");

                    b.Property<int>("Team2Score")
                        .HasColumnType("int");

                    b.HasKey("MatchId", "TournamentId", "MapId");

                    b.ToTable("Matches");

                    b.HasData(
                        new
                        {
                            MatchId = 1,
                            TournamentId = 1,
                            MapId = 1,
                            BestRating = 20m,
                            MatchDate = new DateTime(2025, 6, 3, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Team1Score = 21,
                            Team2Score = 37
                        },
                        new
                        {
                            MatchId = 2,
                            TournamentId = 2,
                            MapId = 2,
                            BestRating = 30m,
                            MatchDate = new DateTime(2024, 6, 3, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Team1Score = 13,
                            Team2Score = 37
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerId"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            PlayerId = 1,
                            BirthDate = new DateTime(2005, 6, 3, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Jan",
                            Lastname = "Kowalski"
                        },
                        new
                        {
                            PlayerId = 2,
                            BirthDate = new DateTime(2003, 6, 3, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Anna",
                            Lastname = "Nowak"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.PlayerMatch", b =>
                {
                    b.Property<int>("MatchId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("MVPs")
                        .HasColumnType("int");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(4,2)");

                    b.HasKey("MatchId", "PlayerId");

                    b.ToTable("PlayerMatches");

                    b.HasData(
                        new
                        {
                            MatchId = 1,
                            PlayerId = 1,
                            MVPs = 1,
                            Rating = 69m
                        },
                        new
                        {
                            MatchId = 2,
                            PlayerId = 2,
                            MVPs = 2,
                            Rating = 31m
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Tournament", b =>
                {
                    b.Property<int>("TournamentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TournamentId"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TournamentId");

                    b.ToTable("Tournaments");

                    b.HasData(
                        new
                        {
                            TournamentId = 1,
                            EndDate = new DateTime(2025, 7, 3, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Esports2025",
                            StartDate = new DateTime(2025, 6, 3, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TournamentId = 2,
                            EndDate = new DateTime(2024, 7, 3, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Esports2024",
                            StartDate = new DateTime(2024, 6, 3, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
